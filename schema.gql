# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserWithoutPassword {
  id: Int!
  name: String!
  email: String!
  avatar: String
  phone: String!
  address: String!
}

type UserLoginResult {
  id: Int!
  name: String!
  email: String!
  avatar: String
  phone: String!
  address: String!
}

type Product {
  id: Int!
  price: Int!
  title: String!
  description: String!
  avatar: String!
  images: [String!]!
  categoryId: Int!
}

type Category {
  id: Int!
  title: String!
}

type Query {
  getSome: UserWithoutPassword!
  findAllProducts: [Product!]!
  findProduct(getProductDto: GetProductInput!): [Product!]!
  findCategory(getCategoryDto: GetCategoryDto!): Category!
  findAllCategories: [Category!]!
}

input GetProductInput {
  id: Int!
}

input GetCategoryDto {
  id: Int!
}

type Mutation {
  updateUser(payload: UpdateUserInput!): UserWithoutPassword!
  register(payload: RegisterUserInput!): UserWithoutPassword!
  login(payload: LoginUserInput!): UserLoginResult!
  createProduct(productDto: CreateProductInput!): Product!
  updateProduct(updateProductDto: UpdateProductInput!): Product!
  removeProduct(removeProductDto: DeleteProductInput!): Product!
  createCategory(createCategoryDto: CreateCategoryDto!): Category!
  updateCategory(updateCategoryDto: UpdateCategoryDto!): Category!
  deleteCategory(deleteCategoryDto: DeleteCategoryDto!): Category!
}

input UpdateUserInput {
  id: Float!
  name: String
  email: String
  avatar: String
  address: String
  phone: String
  password: String
}

input RegisterUserInput {
  name: String!
  email: String!
  password: String!
  address: String!
  phone: String!
  avatar: String
  passwordRepeat: String!
}

"""
To Login User fields is one of ["optional" name or "optional" email], and required password
"""
input LoginUserInput {
  name: String
  email: String
  phone: String
  password: String!
}

input CreateProductInput {
  price: Int!
  title: String!
  description: String!
  avatar: String!
  images: [String!]!
  categoryId: Int!
}

input UpdateProductInput {
  price: Int
  title: String
  description: String
  avatar: String
  images: [String!]
  categoryId: Int
  id: Int!
}

input DeleteProductInput {
  id: Int!
}

input CreateCategoryDto {
  title: String!
}

input UpdateCategoryDto {
  id: Int!
}

input DeleteCategoryDto {
  id: Int!
}